{"version":3,"file":"calendar.js","sourceRoot":"","sources":["../../src/calendar/calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { Calendar, CalendarDay, CalendarOptions } from './calendar_typing.js';\nimport { getWeekNumber } from './get-week-number.js';\nimport { toUTCDate } from './to-utc-date.js';\n\nfunction normalizeWeekday(weekday: number): number {\n  if (weekday >= 0 && weekday < 7) return weekday;\n\n  const weekdayOffset = weekday < 0 ? 7 * Math.ceil(Math.abs(weekday / 7)) : 0;\n\n  return (weekdayOffset + weekday) % 7;\n}\n\nfunction shiftDisabledDays(firstDayOfWeek: number, disabledDays: number[]) {\n  return disabledDays.map((n) => {\n    const day = n - firstDayOfWeek;\n\n    return day < 0 ? 7 + day : day;\n  });\n}\n\nexport function calendar(options: CalendarOptions): Calendar {\n  const {\n    dayFormat,\n    fullDateFormat,\n    locale,\n    selectedDate,\n\n    disabledDates = [],\n    disabledDays = [],\n    firstDayOfWeek = 0,\n    max,\n    min,\n    showWeekNumber = false,\n    weekLabel = 'Week',\n    weekNumberType = 'first-4-day-week',\n  }: CalendarOptions = options || {};\n\n  //  Month Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\n  //  Days   31  28  31  30  31  30  31  31  30  31  30  31\n  //   31?    0       2       4       6   7       9      11\n  //   30?                3       5           8      10\n  //  Feb?        1\n  //  Su Mo Tu We Th Fr Sa    startDay - _firstDayOfWeek\n  //                  1  2        5 - 0 < 0 ? 6 : 5 - 0;\n  //  Mo Tu We Th Fr Sa Su\n  //               1  2  3        5 - 1 < 0 ? 6 : 5 - 1;\n  //  Tu We Th Fr Sa Su Mo\n  //            1  2  3  4        5 - 2 < 0 ? 6 : 5 - 2;\n  //  We Th Fr Sa Su Mo Tu\n  //         1  2  3  4  5        5 - 3 < 0 ? 6 : 5 - 3;\n  //  Th Fr Sa Su Mo Tu We\n  //      1  2  3  4  5  6        5 - 4 < 0 ? 6 : 5 - 4;\n  //  Fr Sa Su Mo Tu We Th\n  //   1  2  3  4  5  6  7        5 - 5 < 0 ? 6 : 5 - 5;\n  //  Sa Su Mo Tu We Th Fr\n  //                     1        5 - 6 < 0 ? 6 : 5 - 6;\n  const fy = selectedDate.getUTCFullYear();\n  const selectedMonth = selectedDate.getUTCMonth();\n  const calendarKey = `${locale}:${toUTCDate(fy, selectedMonth, 1).toJSON()}`;\n\n  const totalDays = toUTCDate(fy, selectedMonth + 1, 0).getUTCDate();\n  const preFirstWeekday = toUTCDate(fy, selectedMonth, 1).getUTCDay() - firstDayOfWeek;\n  const firstWeekday = normalizeWeekday(preFirstWeekday);\n  const totalCol = showWeekNumber ? 8 : 7;\n  const firstWeekdayWithWeekNumberOffset = firstWeekday + (showWeekNumber ? 1 : 0);\n  const calendarDays: CalendarDay[][] = [];\n  const minTime = null == min ? Number.MIN_SAFE_INTEGER : +min;\n  const maxTime = null == max ? Number.MAX_SAFE_INTEGER : +max;\n  const disabledDatesSet: Set<number> = new Set(disabledDates.map(n => +n));\n  const disabledDaysSet: Set<number> = new Set(\n    !firstDayOfWeek ? disabledDays : shiftDisabledDays(firstDayOfWeek, disabledDays));\n\n  let calendarRow: CalendarDay[] = [];\n  let day = 1;\n  let row = 0;\n  let col = 0;\n  let calendarFilled = false;\n  /**\n   * NOTE(motss): Thinking this is cool to write,\n   * don't blame me for writing this kind of loop.\n   * Optimization is totally welcome to make things faster.\n   * Also, I'd like to learn a better way. PM me and we can talk about that. ðŸ˜„\n   */\n  for (let i = 0, len = 6 * totalCol + (showWeekNumber ? 6 : 0); i <= len; i += 1, col += 1) {\n    if (col >= totalCol) {\n      col = 0;\n      row += 1;\n      calendarDays.push(calendarRow);\n      calendarRow = [];\n    }\n\n    if (i >= len) break;\n\n    const rowVal = col + (row * totalCol);\n\n    if (!calendarFilled && showWeekNumber && col < 1) {\n      const { weekNumber } = getWeekNumber(\n        weekNumberType,\n        toUTCDate(fy, selectedMonth, day - (row < 1 ? firstWeekday : 0)));\n      const wkLabel = `${weekLabel} ${weekNumber}`;\n\n      calendarRow.push({\n        fullDate: null,\n        label: wkLabel,\n        value: `${weekNumber}`,\n        key: `${calendarKey}:${wkLabel}`,\n        disabled: true,\n      });\n      continue;\n    }\n\n    if (calendarFilled || rowVal < firstWeekdayWithWeekNumberOffset) {\n      calendarRow.push({\n        fullDate: null,\n        label: null,\n        value: null,\n        key: `${calendarKey}:${i}`,\n        disabled: true,\n      });\n      continue;\n    }\n\n    const fullDate = toUTCDate(fy, selectedMonth, day);\n    const fullDateTime = +fullDate;\n    const isDisabledDay =\n      disabledDaysSet.has(col) ||\n      disabledDatesSet.has(fullDateTime) ||\n      (fullDateTime < minTime || fullDateTime > maxTime);\n\n    if (isDisabledDay) disabledDatesSet.add(fullDateTime);\n\n    calendarRow.push({\n      fullDate,\n      /** NOTE: Stripping LTR mark away for x-browser compatibilities and consistency reason */\n      label: fullDateFormat(fullDate),\n      value: dayFormat(fullDate),\n      key: `${calendarKey}:${fullDate.toJSON()}`,\n      disabled: isDisabledDay,\n    });\n    day += 1;\n\n    if (day > totalDays) calendarFilled = true;\n  }\n\n  return {\n    disabledDatesSet,\n    disabledDaysSet,\n    calendar: calendarDays,\n    key: calendarKey,\n  };\n}\n"]}