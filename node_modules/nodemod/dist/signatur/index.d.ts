export interface SignaturOptions {
    separator?: string;
}
interface SignaturReturnError {
    error: {
        type: string;
        message: string;
    };
}
declare type UnknownRecord = Record<string, unknown>;
export declare class SignaturError extends Error {
    type: string;
    constructor(type: string, message: string);
    toJSON(): SignaturReturnError;
}
export declare function signSync<T = UnknownRecord>(data: T, secret: string, options?: SignaturOptions): string;
export declare function unsignSync<T = UnknownRecord>(signature: string, secret: string, options?: SignaturOptions): T;
export declare function sign<T = UnknownRecord>(data: T, secret: string, options?: SignaturOptions): Promise<string>;
export declare function unsign<T = UnknownRecord>(signature: string, secret: string, options?: SignaturOptions): Promise<T>;
export {};
//# sourceMappingURL=index.d.ts.map