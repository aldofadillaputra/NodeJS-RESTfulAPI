{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/lit-ntml/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAmBnE,KAAK,UAAU,eAAe,CAAC,OAA6B,EAAE,GAAG,IAAW;IAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;QACpC,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC,GAAG,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE,CAAC,UAAU,KAAK,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtD,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACzC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;IAE5B,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAE;QACvB,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC7D,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC;IACrD,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAED,KAAK,UAAU,YAAY,CACzB,EAAuC,EACvC,OAA6B,EAC7B,GAAG,IAAW;IAEd,IAAI;QACF,MAAM,OAAO,GAAG,MAAM,eAAe,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;QACxD,OAAO,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;KAC/B;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,CAAC,CAAC;KACT;AACH,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,KAAK,EAAE,CAAuB,EAAE,GAAG,CAAQ,EAAE,EAAE,CACjE,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAC3D,MAAM,CAAC,MAAM,YAAY,GAAG,KAAK,EAAE,CAAuB,EAAE,GAAG,CAAQ,EAAE,EAAE,CACzE,YAAY,CAAC,aAAa,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC","sourcesContent":["import { parse, parseFragment, serialize } from '../lib/parse5.js';\n\n// export const DEFAULT_MINIFY_OPTIONS: htmlMinifier.Options = {\n//   collapseBooleanAttributes: true,\n//   collapseWhitespace: true,\n//   minifyCSS: true,\n//   minifyJS: true,\n//   processConditionalComments: true,\n//   quoteCharacter: '\"',\n//   removeComments: true,\n//   removeOptionalTags: true,\n//   removeRedundantAttributes: true,\n//   removeScriptTypeAttributes: true,\n//   removeStyleLinkTypeAttributes: true,\n//   sortAttributes: true,\n//   sortClassName: true,\n//   trimCustomFragments: true,\n// };\n\nasync function processLiterals(strings: TemplateStringsArray, ...exps: any[]): Promise<string> {\n  const listTask = exps.map(async (n) => {\n    const tasks = (Array.isArray(n) ? n : [n])\n      .map(async o => 'function' === typeof(o) ? o() : o);\n\n    return Promise.all(tasks);\n  });\n  const done = await Promise.all(listTask);\n  const doneLen = done.length;\n\n  return strings.reduce((p, n, i) => {\n    const nTask = done[i] ;\n    const joined = Array.isArray(nTask) ? nTask.join('') : nTask;\n    return `${p}${i >= doneLen ? n : `${n}${joined}`}`;\n  }, '');\n}\n\nasync function parsePartial(\n  fn: typeof parse | typeof parseFragment,\n  strings: TemplateStringsArray,\n  ...exps: any[]\n) {\n  try {\n    const content = await processLiterals(strings, ...exps);\n    return serialize(fn(content));\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport const html = async (s: TemplateStringsArray, ...e: any[]) =>\n  parsePartial(c => parse(`<!doctype html>${c}`), s, ...e);\nexport const htmlFragment = async (s: TemplateStringsArray, ...e: any[]) =>\n  parsePartial(parseFragment, s, ...e);\n"]}